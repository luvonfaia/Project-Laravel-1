version: "3.8"

services:
  server:
#    image: nginx:stable-alpine
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro # read-only
    ports:
      - '8003:80'
    depends_on:
      - php
      - mysql
      - phpmyadmin

  php:
#    image: php:8.1-fpm-alpine
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated #to improve performance

  mysql:
    image: mysql/mysql-server:latest
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    tty: true
#    image: 'mariadb:latest'
#    image: mysql:5.7
#    platform: linux/x86_64
    env_file:
      - ./env/mysql.env
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - db:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin:apache
    restart: always
    ports:
      - "9083:80"
    links:
      - mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root

## UTILITIES
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html

  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]

  npm:
    image: node:14
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html

volumes:
  db: